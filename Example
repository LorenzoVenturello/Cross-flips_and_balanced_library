load("cross_flips_source_code.sage")

#### Produce the (basic) non trivial cross-flips in dimension 3

cflips=cross_flips(4)

#### Let start be a random balanced triangulation of the 3-sphere

start=SimplicialComplex([[3,4,5,6],[0,5,6,10],[2,4,5,7],[3,4,6,11],
						 [2,3,4,5],[1,2,4,10],[2,4,10,11],[4,5,6,7],
						 [2,3,4,11],[1,6,7,8],[1,7,8,9],[8,9,10,11],
						 [2,8,10,11],[5,6,7,8],[1,6,8,10],[0,1,3,9],
						 [0,2,3,5],[1,4,6,10],[0,1,2,7],[0,1,7,9],
						 [0,9,10,11],[0,3,9,11],[5,8,9,10],[1,2,4,7],
						 [0,1,2,3],[3,8,9,11],[0,5,9,10],[1,2,8,10],
						 [1,4,6,7],[0,6,10,11],[1,2,3,8],[5,6,8,10],
						 [0,3,6,11],[0,5,7,9],[1,3,8,9],[0,3,5,6],
						 [4,6,10,11],[2,3,8,11],[5,7,8,9],[0,2,5,7]])
						 
#### How to obtain 10 up and down loops

for i in range(10):
	upmoves=randomVF2(cflips,start,6)  ### performs 6 random up flips
	rst=upmoves[4]
    app=applicable_list(c,rst)         ### checks all the applicable flips 
    it=iteration(c,rst,app,[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],120)  ### the zero lists are not to be considered for the moment. It performs 120 down moves.
    start=it[0]
						 
#### How the output of 1 loop looks like

Start random f0 increasing:
Number of up-flips = 6
round = 1 move_applied =  4 current_f0 = 13
round = 2 move_applied =  4 current_f0 = 14
round = 3 move_applied =  1 current_f0 = 17
round = 4 move_applied =  2 current_f0 = 18
round = 5 move_applied =  6 current_f0 = 20
round = 6 move_applied =  3 current_f0 = 24
Listing applicable moves.
Start reduction:
round = 1 move_applied =  [5, 0] number_of_degree_2d_vertices = 12 current_f0 = 23
round = 2 move_applied =  [5, 2] number_of_degree_2d_vertices = 12 current_f0 = 22
round = 3 move_applied =  [5, 0] number_of_degree_2d_vertices = 12 current_f0 = 21
round = 4 move_applied =  [1, 1] number_of_degree_2d_vertices = 11 current_f0 = 18
round = 5 move_applied =  [2, 1] number_of_degree_2d_vertices = 11 current_f0 = 17
round = 6 move_applied =  [4, 4] number_of_degree_2d_vertices = 10 current_f0 = 16
round = 7 move_applied =  [0, 0] number_of_degree_2d_vertices = 8 current_f0 = 14
round = 8 move_applied =  [2, 0] number_of_degree_2d_vertices = 7 current_f0 = 13
round = 9 move_applied =  [2, 0] number_of_degree_2d_vertices = 8 current_f0 = 12
round = 10 move_applied =  [0, 0] number_of_degree_2d_vertices = 6 current_f0 = 10
round = 11 move_applied =  [0, 0] number_of_degree_2d_vertices = 8 current_f0 = 8            ##### It reached the boundary of the 4-dimensional cross-polytope
