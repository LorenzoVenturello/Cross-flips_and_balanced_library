load("cross_flips_source_code.sage")

################################################
############ An example in dimension 2

#### Produce the (basic) non trivial cross-flips in dimension 2

cflips=cross_flips(3)  ### the argument of cross_flips is the dimension + 1, since it refers to the dimension of the cross-polytope

#### We consider an arbitrary triangulation of the surface of genus 3 on 9 vertices, randomly chosen from the Manifold page.

surface_g3_9=SimplicialComplex([[1,2,3],[1,2,4],[1,3,5],[1,4,5],[2,3,6],
 [2,4,7],[2,5,6],[2,5,8],[2,7,8],[3,4,8],[3,4,9],[3,5,7],[3,6,9],
 [3,7,8],[4,5,6],[4,6,8],[4,7,9],[5,7,9],[5,8,9],[6,8,9]])

#### We take the barycentric subdivision, obtaining a balanced triangulation of the same topological space.
#### The help function vertex_relabeling relabels the vertices using natural numbers.

start=vertex_relabeling(surface_g3_9.barycentric_subdivision())

#### How to obtain 10 up and down loops

for i in range(10):
	upmoves=randomVF2(cflips,start,6)  	### performs 6 random up flips
	rst=upmoves[4]
    	app=applicable_list(cflips,rst)         ### checks all the applicable flips 
    	it=iteration(cflips,rst,app,[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],120)  ### the zero lists are not to be considered for the moment. It performs 120 down moves.
   	 start=it[0]

#### The output (2 loops)

Start random f0 increasing:
Number of up-flips = 6
round = 1 move_applied =  2 current_f0 = 60
round = 2 move_applied =  2 current_f0 = 61
round = 3 move_applied =  1 current_f0 = 64
round = 4 move_applied =  2 current_f0 = 65
round = 5 move_applied =  1 current_f0 = 68
round = 6 move_applied =  0 current_f0 = 70
Listing applicable moves.
Start reduction:
round = 1 move_applied =  [2, 12] number_of_degree_2d_vertices = 38 current_f0 = 69
round = 2 move_applied =  [2, 22] number_of_degree_2d_vertices = 38 current_f0 = 68
round = 3 move_applied =  [2, 76] number_of_degree_2d_vertices = 38 current_f0 = 67
round = 4 move_applied =  [2, 55] number_of_degree_2d_vertices = 38 current_f0 = 66
round = 5 move_applied =  [2, 90] number_of_degree_2d_vertices = 38 current_f0 = 65
round = 6 move_applied =  [2, 87] number_of_degree_2d_vertices = 38 current_f0 = 64
round = 7 move_applied =  [2, 95] number_of_degree_2d_vertices = 38 current_f0 = 63
round = 8 move_applied =  [2, 98] number_of_degree_2d_vertices = 38 current_f0 = 62
round = 9 move_applied =  [2, 91] number_of_degree_2d_vertices = 37 current_f0 = 61
round = 10 move_applied =  [2, 1] number_of_degree_2d_vertices = 36 current_f0 = 60
round = 11 move_applied =  [2, 24] number_of_degree_2d_vertices = 36 current_f0 = 59
round = 12 move_applied =  [2, 78] number_of_degree_2d_vertices = 36 current_f0 = 58
round = 13 move_applied =  [2, 77] number_of_degree_2d_vertices = 36 current_f0 = 57
round = 14 move_applied =  [2, 66] number_of_degree_2d_vertices = 35 current_f0 = 56
round = 15 move_applied =  [2, 7] number_of_degree_2d_vertices = 34 current_f0 = 55
round = 16 move_applied =  [2, 24] number_of_degree_2d_vertices = 34 current_f0 = 54
round = 17 move_applied =  [2, 11] number_of_degree_2d_vertices = 33 current_f0 = 53
round = 18 move_applied =  [2, 59] number_of_degree_2d_vertices = 33 current_f0 = 52
round = 19 move_applied =  [2, 5] number_of_degree_2d_vertices = 32 current_f0 = 51
round = 20 move_applied =  [2, 58] number_of_degree_2d_vertices = 32 current_f0 = 50
round = 21 move_applied =  [2, 4] number_of_degree_2d_vertices = 31 current_f0 = 49
round = 22 move_applied =  [2, 28] number_of_degree_2d_vertices = 30 current_f0 = 48
round = 23 move_applied =  [2, 24] number_of_degree_2d_vertices = 29 current_f0 = 47
round = 24 move_applied =  [2, 18] number_of_degree_2d_vertices = 28 current_f0 = 46
round = 25 move_applied =  [2, 35] number_of_degree_2d_vertices = 27 current_f0 = 45
round = 26 move_applied =  [2, 54] number_of_degree_2d_vertices = 26 current_f0 = 44
round = 27 move_applied =  [2, 51] number_of_degree_2d_vertices = 25 current_f0 = 43
round = 28 move_applied =  [2, 39] number_of_degree_2d_vertices = 24 current_f0 = 42
round = 29 move_applied =  [2, 12] number_of_degree_2d_vertices = 23 current_f0 = 41
round = 30 move_applied =  [2, 25] number_of_degree_2d_vertices = 22 current_f0 = 40
round = 31 move_applied =  [2, 45] number_of_degree_2d_vertices = 22 current_f0 = 39
round = 32 move_applied =  [2, 45] number_of_degree_2d_vertices = 22 current_f0 = 38
round = 33 move_applied =  [2, 40] number_of_degree_2d_vertices = 21 current_f0 = 37
round = 34 move_applied =  [2, 26] number_of_degree_2d_vertices = 20 current_f0 = 36
round = 35 move_applied =  [2, 29] number_of_degree_2d_vertices = 19 current_f0 = 35
round = 36 move_applied =  [2, 21] number_of_degree_2d_vertices = 18 current_f0 = 34
round = 37 move_applied =  [2, 34] number_of_degree_2d_vertices = 18 current_f0 = 33
round = 38 move_applied =  [2, 12] number_of_degree_2d_vertices = 17 current_f0 = 32
round = 39 move_applied =  [2, 26] number_of_degree_2d_vertices = 17 current_f0 = 31
round = 40 move_applied =  [2, 16] number_of_degree_2d_vertices = 16 current_f0 = 30
round = 41 move_applied =  [2, 8] number_of_degree_2d_vertices = 15 current_f0 = 29
round = 42 move_applied =  [2, 22] number_of_degree_2d_vertices = 14 current_f0 = 28
round = 43 move_applied =  [2, 11] number_of_degree_2d_vertices = 13 current_f0 = 27
round = 44 move_applied =  [2, 22] number_of_degree_2d_vertices = 13 current_f0 = 26
round = 45 move_applied =  [2, 14] number_of_degree_2d_vertices = 12 current_f0 = 25
round = 46 move_applied =  [2, 12] number_of_degree_2d_vertices = 11 current_f0 = 24
round = 47 move_applied =  [2, 12] number_of_degree_2d_vertices = 11 current_f0 = 23
round = 48 move_applied =  [2, 9] number_of_degree_2d_vertices = 11 current_f0 = 22
round = 49 move_applied =  [2, 10] number_of_degree_2d_vertices = 10 current_f0 = 21
round = 50 move_applied =  [2, 10] number_of_degree_2d_vertices = 9 current_f0 = 20
round = 51 move_applied =  [2, 2] number_of_degree_2d_vertices = 8 current_f0 = 19
round = 52 move_applied =  [2, 0] number_of_degree_2d_vertices = 7 current_f0 = 18
round = 53 move_applied =  [2, 2] number_of_degree_2d_vertices = 7 current_f0 = 17
round = 54 move_applied =  [2, 4] number_of_degree_2d_vertices = 7 current_f0 = 16
round = 55 move_applied =  [0, 0] number_of_degree_2d_vertices = 5 current_f0 = 14
Start random f0 increasing:
Number of up-flips = 6
round = 1 move_applied =  1 current_f0 = 17
round = 2 move_applied =  0 current_f0 = 19
round = 3 move_applied =  0 current_f0 = 21
round = 4 move_applied =  1 current_f0 = 24
round = 5 move_applied =  1 current_f0 = 27
round = 6 move_applied =  2 current_f0 = 28
Listing applicable moves.
Start reduction:
round = 1 move_applied =  [2, 3] number_of_degree_2d_vertices = 13 current_f0 = 27
round = 2 move_applied =  [2, 10] number_of_degree_2d_vertices = 14 current_f0 = 26
round = 3 move_applied =  [2, 0] number_of_degree_2d_vertices = 14 current_f0 = 25
round = 4 move_applied =  [2, 12] number_of_degree_2d_vertices = 13 current_f0 = 24
round = 5 move_applied =  [2, 7] number_of_degree_2d_vertices = 12 current_f0 = 23
round = 6 move_applied =  [2, 13] number_of_degree_2d_vertices = 12 current_f0 = 22
round = 7 move_applied =  [2, 7] number_of_degree_2d_vertices = 11 current_f0 = 21
round = 8 move_applied =  [0, 0] number_of_degree_2d_vertices = 9 current_f0 = 19
round = 9 move_applied =  [0, 0] number_of_degree_2d_vertices = 7 current_f0 = 17
round = 10 move_applied =  [2, 2] number_of_degree_2d_vertices = 5 current_f0 = 16
round = 11 move_applied =  [2, 3] number_of_degree_2d_vertices = 5 current_f0 = 15
round = 12 move_applied =  [2, 1] number_of_degree_2d_vertices = 4 current_f0 = 14
round = 13 move_applied =  [2, 0] number_of_degree_2d_vertices = 3 current_f0 = 13
round = 14 move_applied =  [2, 0] number_of_degree_2d_vertices = 1 current_f0 = 12  ### 12 vertices is the minimum number of vertices found in this second loop.

#### The reached triangulation is saved as start


################################################
############ An example in dimension 3

#### Produce the (basic) non trivial cross-flips in dimension 3

cflips=cross_flips(4)

#### Let start be a random balanced triangulation of the 3-sphere

start=SimplicialComplex([[3,4,5,6],[0,5,6,10],[2,4,5,7],[3,4,6,11],
						 [2,3,4,5],[1,2,4,10],[2,4,10,11],[4,5,6,7],
						 [2,3,4,11],[1,6,7,8],[1,7,8,9],[8,9,10,11],
						 [2,8,10,11],[5,6,7,8],[1,6,8,10],[0,1,3,9],
						 [0,2,3,5],[1,4,6,10],[0,1,2,7],[0,1,7,9],
						 [0,9,10,11],[0,3,9,11],[5,8,9,10],[1,2,4,7],
						 [0,1,2,3],[3,8,9,11],[0,5,9,10],[1,2,8,10],
						 [1,4,6,7],[0,6,10,11],[1,2,3,8],[5,6,8,10],
						 [0,3,6,11],[0,5,7,9],[1,3,8,9],[0,3,5,6],
						 [4,6,10,11],[2,3,8,11],[5,7,8,9],[0,2,5,7]])
						 
#### How to obtain 10 up and down loops

for i in range(10):
	upmoves=randomVF2(cflips,start,6)  ### performs 6 random up flips
	rst=upmoves[4]
    	app=applicable_list(cflips,rst)         ### checks all the applicable flips 
    	it=iteration(cflips,rst,app,[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],120)  ### the zero lists are not to be considered for the moment. It performs 120 down moves.
    	start=it[0]
						 
#### The output (1 loop)

Start random f0 increasing:
Number of up-flips = 6
round = 1 move_applied =  4 current_f0 = 13
round = 2 move_applied =  4 current_f0 = 14
round = 3 move_applied =  1 current_f0 = 17
round = 4 move_applied =  2 current_f0 = 18
round = 5 move_applied =  6 current_f0 = 20
round = 6 move_applied =  3 current_f0 = 24
Listing applicable moves.
Start reduction:
round = 1 move_applied =  [5, 0] number_of_degree_2d_vertices = 12 current_f0 = 23
round = 2 move_applied =  [5, 2] number_of_degree_2d_vertices = 12 current_f0 = 22
round = 3 move_applied =  [5, 0] number_of_degree_2d_vertices = 12 current_f0 = 21
round = 4 move_applied =  [1, 1] number_of_degree_2d_vertices = 11 current_f0 = 18
round = 5 move_applied =  [2, 1] number_of_degree_2d_vertices = 11 current_f0 = 17
round = 6 move_applied =  [4, 4] number_of_degree_2d_vertices = 10 current_f0 = 16
round = 7 move_applied =  [0, 0] number_of_degree_2d_vertices = 8 current_f0 = 14
round = 8 move_applied =  [2, 0] number_of_degree_2d_vertices = 7 current_f0 = 13
round = 9 move_applied =  [2, 0] number_of_degree_2d_vertices = 8 current_f0 = 12
round = 10 move_applied =  [0, 0] number_of_degree_2d_vertices = 6 current_f0 = 10
round = 11 move_applied =  [0, 0] number_of_degree_2d_vertices = 8 current_f0 = 8            ##### It reached the boundary of the 4-dimensional cross-polytope
